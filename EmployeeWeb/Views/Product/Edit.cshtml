@using Common.Enums
@using Common.ViewModels
@model Common.ViewModels.ProductViewModel
@{
    ViewBag.Title = $"Edycja produktu: {Html.Raw(Model.Name)}";
}
@await Html.PartialAsync("PageTitle/_PageTitle", ViewData["Title"])

<form asp-action="Edit">

    <div class="paddingpage">
        @await Html.PartialAsync("Buttons/_BackSaveButton")
        <div class="card">
            <div asp-validation-summary="ModelOnly" class="red white-text"></div>
            <div class="card-content">
                <div class="row">
                    <div class="input-field col s12">
                        <label asp-for="Code"></label>
                        <input asp-for="Code" class="input-form" readonly="readonly"/>
                    </div>
                </div>
                <div class="row">

                    <div class="input-field col s12 m6">
                        <label asp-for="Brand"></label>
                        <input asp-for="Brand" class="input-form"/>
                        <span asp-validation-for="Brand" class="invalid"></span>
                    </div>
                    <div class="input-field col s12 m6">
                        <label asp-for="Model"></label>
                        <input asp-for="Model" class="input-form"/>
                        <span asp-validation-for="Model" class="invalid"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="input-field col s12 m6 l3">
                        <label asp-for="Price"></label>
                        <input asp-for="Price" class="input-form"/>
                        <span asp-validation-for="Price" class="invalid"></span>
                    </div>
                    <div class="input-field col s12 m6 l3">
                        <select asp-for="Tax">
                            @foreach (var item in TaxRateListViewModel.TaxRate)
                            {
                                if (item.Key == Model.Tax)
                                {
                                    <option value="@item.Key" selected="selected">@item.Value</option>
                                    continue;
                                }
                                <option value="@item.Key">@item.Value</option>
                            }
                        </select>
                        <label asp-for="Tax"></label>
                    </div>
                    <div class="input-field col s12 m6 l3">
                        <select asp-for="BasicUnit" class="input-form" asp-items="Html.GetEnumSelectList<BasicUnitProduct>()"></select>
                    </div>
                    <div class="input-field col s12 m6 l3">
                        <label asp-for="InStock"></label>
                        <input asp-for="InStock" class="input-form"/>
                        <span asp-validation-for="InStock" class="invalid"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s12">
                        <label asp-for="Description"></label>
                        <textarea asp-for="Description" class=" materialize-textarea input-form"></textarea>
                        <span asp-validation-for="Description" class="invalid"></span>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <input asp-for="CreatedDateTime" type="hidden"/>
</form>

@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        await Html.RenderPartialAsync("_MaskInputPartial");

    }
    <script>
        document.addEventListener("DOMContentLoaded",
            (event) => {
                FormHelper.blurValidate();

            });


    </script>
}